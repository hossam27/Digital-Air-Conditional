Archive member included because of file (symbol)

c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodqi4.o)
                              ./App/App.o (__udivmodqi4)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)
                              ./BSW/lcd/LCD_Prog.o (__udivmodhi4)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_divmodhi4.o)
                              ./App/App.o (__divmodhi4)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o (exit)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                              ./MCAL/DIO/DIO_prog.o (__do_copy_data)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                              ./BSW/lcd/LCD_Prog.o (__do_clear_bss)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
LOAD ./MCAL/EEPROM/EEPROM_prog.o
LOAD ./MCAL/DIO/DIO_prog.o
LOAD ./BSW/lcd/LCD_Prog.o
LOAD ./BSW/Switch/TACTILE_prog.o
LOAD ./App/App.o
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x13e6
 *(.vectors)
 .vectors       0x00000000       0x54 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x16 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                0x00000060                __do_copy_data
 .init4         0x00000076       0x10 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000076                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000086        0x8 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x0000008e        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x0000008e                __vector_1
                0x0000008e                __vector_12
                0x0000008e                __bad_interrupt
                0x0000008e                __vector_6
                0x0000008e                __vector_3
                0x0000008e                __vector_11
                0x0000008e                __vector_13
                0x0000008e                __vector_17
                0x0000008e                __vector_19
                0x0000008e                __vector_7
                0x0000008e                __vector_5
                0x0000008e                __vector_4
                0x0000008e                __vector_9
                0x0000008e                __vector_2
                0x0000008e                __vector_15
                0x0000008e                __vector_8
                0x0000008e                __vector_14
                0x0000008e                __vector_10
                0x0000008e                __vector_16
                0x0000008e                __vector_18
                0x0000008e                __vector_20
 .text          0x00000092        0x0 ./MCAL/EEPROM/EEPROM_prog.o
 .text          0x00000092        0x0 ./MCAL/DIO/DIO_prog.o
 .text          0x00000092        0x0 ./BSW/lcd/LCD_Prog.o
 .text          0x00000092        0x0 ./BSW/Switch/TACTILE_prog.o
 .text          0x00000092        0x0 ./App/App.o
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodqi4.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_divmodhi4.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000092                . = ALIGN (0x2)
 *(.text.*)
 .text.EEPROM_voidInit
                0x00000092        0xe ./MCAL/EEPROM/EEPROM_prog.o
                0x00000092                EEPROM_voidInit
 .text.EEPROM_voidWriteByte
                0x000000a0       0x64 ./MCAL/EEPROM/EEPROM_prog.o
                0x000000a0                EEPROM_voidWriteByte
 .text.EEPROM_u8ReadByte
                0x00000104       0x40 ./MCAL/EEPROM/EEPROM_prog.o
                0x00000104                EEPROM_u8ReadByte
 .text.DIO_voidInit
                0x00000144       0x7a ./MCAL/DIO/DIO_prog.o
                0x00000144                DIO_voidInit
 .text.DIO_u8ReadPortDir
                0x000001be       0x52 ./MCAL/DIO/DIO_prog.o
                0x000001be                DIO_u8ReadPortDir
 .text.DIO_u8WritePortDir
                0x00000210       0x4a ./MCAL/DIO/DIO_prog.o
                0x00000210                DIO_u8WritePortDir
 .text.DIO_u8ReadPortVal
                0x0000025a       0x52 ./MCAL/DIO/DIO_prog.o
                0x0000025a                DIO_u8ReadPortVal
 .text.DIO_u8WritePortVal
                0x000002ac       0x4a ./MCAL/DIO/DIO_prog.o
                0x000002ac                DIO_u8WritePortVal
 .text.DIO_u8ReadPinDir
                0x000002f6       0x94 ./MCAL/DIO/DIO_prog.o
                0x000002f6                DIO_u8ReadPinDir
 .text.DIO_u8WritePinDir
                0x0000038a       0xaa ./MCAL/DIO/DIO_prog.o
                0x0000038a                DIO_u8WritePinDir
 .text.DIO_u8ReadPinVal
                0x00000434       0x94 ./MCAL/DIO/DIO_prog.o
                0x00000434                DIO_u8ReadPinVal
 .text.DIO_u8WritePinVal
                0x000004c8       0xaa ./MCAL/DIO/DIO_prog.o
                0x000004c8                DIO_u8WritePinVal
 .text.LCD_VoidCmd
                0x00000572       0x98 ./BSW/lcd/LCD_Prog.o
                0x00000572                LCD_VoidCmd
 .text.LCD_ClearLcd
                0x0000060a       0x14 ./BSW/lcd/LCD_Prog.o
                0x0000060a                LCD_ClearLcd
 .text.LCD_EnableLcd
                0x0000061e       0xaa ./BSW/lcd/LCD_Prog.o
                0x0000061e                LCD_EnableLcd
 .text.LCD_VoidData
                0x000006c8       0x98 ./BSW/lcd/LCD_Prog.o
                0x000006c8                LCD_VoidData
 .text.LCD_WaitLcd
                0x00000760      0x1d0 ./BSW/lcd/LCD_Prog.o
                0x00000760                LCD_WaitLcd
 .text.LCD_VoidInit
                0x00000930      0x132 ./BSW/lcd/LCD_Prog.o
                0x00000930                LCD_VoidInit
 .text.LCD_VoidString
                0x00000a62       0x3a ./BSW/lcd/LCD_Prog.o
                0x00000a62                LCD_VoidString
 .text.LCD_VoidRow
                0x00000a9c       0x2c ./BSW/lcd/LCD_Prog.o
                0x00000a9c                LCD_VoidRow
 .text.LCD_VoidRowString
                0x00000ac8       0x46 ./BSW/lcd/LCD_Prog.o
                0x00000ac8                LCD_VoidRowString
 .text.LCD_VoidGotoxy
                0x00000b0e       0x30 ./BSW/lcd/LCD_Prog.o
                0x00000b0e                LCD_VoidGotoxy
 .text.LCD_VoidSendStringxy
                0x00000b3e       0x32 ./BSW/lcd/LCD_Prog.o
                0x00000b3e                LCD_VoidSendStringxy
 .text.LCD_VoidClearScreen
                0x00000b70       0x14 ./BSW/lcd/LCD_Prog.o
                0x00000b70                LCD_VoidClearScreen
 .text.LCD_u16ReturnString
                0x00000b84      0x208 ./BSW/lcd/LCD_Prog.o
                0x00000b84                LCD_u16ReturnString
 .text.TACTILE_voidInit
                0x00000d8c        0xe ./BSW/Switch/TACTILE_prog.o
                0x00000d8c                TACTILE_voidInit
 .text.TACTILE_u8GetState
                0x00000d9a      0x220 ./BSW/Switch/TACTILE_prog.o
                0x00000d9a                TACTILE_u8GetState
 .text.main     0x00000fba       0x1a ./App/App.o
                0x00000fba                main
 .text.app      0x00000fd4      0x356 ./App/App.o
                0x00000fd4                app
 .text.Local_voidDisplay
                0x0000132a       0x52 ./App/App.o
                0x0000132a                Local_voidDisplay
 .text.libgcc   0x0000137c       0x18 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodqi4.o)
                0x0000137c                __udivmodqi4
 .text.libgcc   0x00001394       0x28 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)
                0x00001394                __udivmodhi4
 .text.libgcc   0x000013bc       0x26 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_divmodhi4.o)
                0x000013bc                __divmodhi4
                0x000013bc                _div
 .text.libgcc   0x000013e2        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x000013e2        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text.libgcc   0x000013e2        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x000013e2                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000013e2        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x000013e2                exit
                0x000013e2                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000013e2        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x000013e6                _etext = .

.data           0x00800060       0x48 load address 0x000013e6
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .data          0x00800060        0x0 ./MCAL/EEPROM/EEPROM_prog.o
 .data          0x00800060        0x0 ./MCAL/DIO/DIO_prog.o
 .data          0x00800060        0x0 ./BSW/lcd/LCD_Prog.o
 .data          0x00800060        0x0 ./BSW/Switch/TACTILE_prog.o
 .data          0x00800060        0xe ./App/App.o
 .data          0x0080006e        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodqi4.o)
 .data          0x0080006e        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)
 .data          0x0080006e        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_divmodhi4.o)
 .data          0x0080006e        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .data          0x0080006e        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .data          0x0080006e        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.data*)
 .data.Local_u8State.1271
                0x0080006e        0x1 ./App/App.o
 *(.rodata)
 *(.rodata*)
 .rodata.DIO_u8RWDirArr
                0x0080006f        0x8 ./MCAL/DIO/DIO_prog.o
 .rodata.DIO_u8ReadPortArr
                0x00800077        0x8 ./MCAL/DIO/DIO_prog.o
 .rodata.DIO_u8WritePortArr
                0x0080007f        0x8 ./MCAL/DIO/DIO_prog.o
 .rodata.TACTILE_u8TactilePins
                0x00800087       0x10 ./BSW/Switch/TACTILE_prog.o
                0x00800087                TACTILE_u8TactilePins
 .rodata.TACTILE_u8TactileType
                0x00800097       0x10 ./BSW/Switch/TACTILE_prog.o
                0x00800097                TACTILE_u8TactileType
 *(.gnu.linkonce.d*)
                0x008000a8                . = ALIGN (0x2)
 *fill*         0x008000a7        0x1 00
                0x008000a8                _edata = .
                0x008000a8                PROVIDE (__data_end, .)

.bss            0x008000a8       0x10
                0x008000a8                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x008000a8        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .bss           0x008000a8        0x0 ./MCAL/EEPROM/EEPROM_prog.o
 .bss           0x008000a8        0x0 ./MCAL/DIO/DIO_prog.o
 .bss           0x008000a8        0x0 ./BSW/lcd/LCD_Prog.o
 .bss           0x008000a8        0x0 ./BSW/Switch/TACTILE_prog.o
 .bss           0x008000a8        0x0 ./App/App.o
 .bss           0x008000a8        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodqi4.o)
 .bss           0x008000a8        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)
 .bss           0x008000a8        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_divmodhi4.o)
 .bss           0x008000a8        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .bss           0x008000a8        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .bss           0x008000a8        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.bss*)
 .bss.Local_u16ProcessedString.1372
                0x008000a8        0xa ./BSW/lcd/LCD_Prog.o
 .bss.TACTILE_u8TactileVal.1233
                0x008000b2        0x1 ./BSW/Switch/TACTILE_prog.o
 .bss.TACTILE_u8CounterDown.1232
                0x008000b3        0x1 ./BSW/Switch/TACTILE_prog.o
 .bss.TACTILE_u8CounterUp.1231
                0x008000b4        0x1 ./BSW/Switch/TACTILE_prog.o
 .bss.TACTILE_u8State.1230
                0x008000b5        0x1 ./BSW/Switch/TACTILE_prog.o
 .bss.Local_u8UpDownFlag.1273
                0x008000b6        0x1 ./App/App.o
 .bss.Local_u8ModeFlag.1272
                0x008000b7        0x1 ./App/App.o
 *(COMMON)
                0x008000b8                PROVIDE (__bss_end, .)
                0x000013e6                __data_load_start = LOADADDR (.data)
                0x0000142e                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x008000b8        0x0
                0x008000b8                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x008000b8                PROVIDE (__noinit_end, .)
                0x008000b8                _end = .
                0x008000b8                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x1d34
 *(.stab)
 .stab          0x00000000      0x294 ./MCAL/EEPROM/EEPROM_prog.o
 .stab          0x00000294      0x750 ./MCAL/DIO/DIO_prog.o
                                0x75c (size before relaxing)
 .stab          0x000009e4      0x9fc ./BSW/lcd/LCD_Prog.o
                                0xa08 (size before relaxing)
 .stab          0x000013e0      0x3c0 ./BSW/Switch/TACTILE_prog.o
                                0x3cc (size before relaxing)
 .stab          0x000017a0      0x594 ./App/App.o
                                0x5a0 (size before relaxing)

.stabstr        0x00000000      0xc70
 *(.stabstr)
 .stabstr       0x00000000      0xc70 ./MCAL/EEPROM/EEPROM_prog.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(Air_Conditioner_Screen.elf elf32-avr)
LOAD linker stubs
